@{
    ViewBag.Title = "Home Page";
}

<div class="container e-bigger home-page">
    <div class="col-md-8 pane">
        <h3>Scrum Master</h3>
        <h4> lets create a session for scrum poker</h4>

    </div>
    <div class="content-page col-md-4 pane">
        <table class="e-table">
            <tr>

                <td>
                    <label><span>Session Name:</span></label>
                    <div class="e-float-input">
                        <input type="text" placeholder="Enter name" class="e-input" required>
                        <span class="e-float-line"></span>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <label><span>Cards:</span></label>
                    <input type="text" id="cardsList" />
                </td>
            </tr>
            <tr>
                <td>
                    <button id="open" class="e-btn e-control" style="float:right;" onclick="openPokers()">Create</button>
                </td>
            </tr>
        </table>
    </div>
</div>


<script>
    ej.base.enableRipple(true);
    // Initialize DropDownList component
    var listObj = new ej.dropdowns.DropDownList({
        dataSource: [
  '1,2,3,5,8,13,20,40,100', '1,2,3,5,8,13,20,40,?',
  '1,2,4,8,16,32,64', '1,2,4,8,12,16,24,32,40', '1,2,3,5,8,13,20,?'],
        // set the placeholder to DropDownList input element
        placeholder: 'Select a card',

    });
    listObj.appendTo('#cardsList');
    function openPokers() {
        $.get("/Home/Chat", function (args) {
            $('.home-page').html(args);
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.masterHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
    }
</script>

<style>
    .content-page {
        padding: 15px;
    }

    .e-table td {
        padding: 10px;
    }

    .e-bigger .container .e-float-input {
        margin-top: 4px;
    }
    .pane{
        margin-top: 8%;
        padding: 10px;
    }
    .content-page {
        float: right;
    }
</style>